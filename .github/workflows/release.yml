name: Release specification
on:
  workflow_dispatch:
  push:
    branches: master

jobs:
  make-release:
    name: Make and publish spec release
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Find pip cache dir
      id: pip-cache
      run: echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@v2
      with:
        # Use the os dependent pip cache directory found above
        path: ${{ steps.pip-cache.outputs.dir }}
        # A match with 'key' counts as cache hit
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        # A match with 'restore-keys' is used as fallback
        restore-keys: ${{ runner.os }}-pip-

    - name: Clone
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: Determine publication type
      id: pubtype
      shell: bash
      run: echo "::set-output name=branch::$(echo ${GITHUB_REF##*/})"

    - name: Get version
      id: getver
      run: |
        spec_version=`grep -oP 'VERSION \K(\d+\.\d+\.\d+)' tuf-spec.md`
        echo "::set-output name=spec_version::$(echo -n $spec_version)"

    - name: Tag release
      uses: mathieudutour/github-tag-action@v5
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ steps.getver.outputs.spec_version }}
        default_bump: false

    - name: Build specification
      run: |
        python -m pip install bikeshed
        make
        mkdir build && mv tuf-spec.html build/index.html

    - name: Publish release to latest
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        folder: build
        base_branch: ${{ steps.pubtype.outputs.branch }}
        target_folder: ${{ steps.getver.outputs.spec_version }}
        clean: false
        branch: gh-pages

    - name: Publish versioned release
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        folder: build
        base_branch: ${{ steps.pubtype.outputs.branch }}
        clean: false
        branch: gh-pages
