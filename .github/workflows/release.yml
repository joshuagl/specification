name: Release specification
on:
  workflow_dispatch:
  push:
    branches: master

jobs:
  make-release:
    name: Make and publish spec release
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@3105fb18c05ddd93efea5f9e0bef7a03a6e9e7df
      with:
        python-version: 3.x

    - name: Find pip cache dir
      id: pip-cache
      run: echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@26968a09c0ea4f3e233fdddbafd1166051a095f6
      with:
        # Use the os dependent pip cache directory found above
        path: ${{ steps.pip-cache.outputs.dir }}
        # A match with 'key' counts as cache hit
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        # A match with 'restore-keys' is used as fallback
        restore-keys: ${{ runner.os }}-pip-

    - name: Clone
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Get version
      id: getver
      run: |
        spec_version=`grep -oP 'VERSION \K(\d+\.\d+\.\d+)' tuf-spec.md`
        echo "::set-output name=spec_version::$(echo -n $spec_version)"

    - name: Make release
      id: makerel
      uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.getver.outputs.spec_version }}
        release_name: v${{ steps.getver.outputs.spec_version }}
        body: Specification release v${{ steps.getver.outputs.spec_version }}

    - name: Build specification
      run: |
        python -m pip install bikeshed
        mkdir build && cd build
        make -f ../Makefile release

    - name: Switch branch
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
      with:
        ref: gh-pages
        clean: false

    - name: Push generated specification
      run: |
        git config user.name "TUF Specification Automation"
        git config user.email tuf-spec-bot@example.com
        rm -fr latest
        mv build/* .
        rmdir build
        make index
        git add .
        git commit -m "Publish latest specification"
        git push
